name: CI/CD Pipeline for TourGuide App

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # -------------------------------------
  #  CONTINUOUS INTEGRATION (CI) JOB
  # -------------------------------------
  build:
    name: Build, Test, and Analyze
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Run all checks with Maven Verify
        # The 'verify' lifecycle phase runs all previous phases, including:
        # - validate (checkstyle)
        # - test (unit tests)
        # - package (builds the JAR)
        # It will also trigger the jacoco:check goal to enforce code coverage.
        run: mvn -B verify

  # -------------------------------------
  #  CONTINUOUS DEPLOYMENT (CD) JOB
  # -------------------------------------
  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest

    needs: build

    # This condition ensures deployment only happens on a push to the main branch,
    # not on pull requests.
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            echo "Starting deployment on EC2..."

            cd ~
            if [ ! -d "tourguide-springboot" ]; then
              echo "Repository not found. Cloning..."
              git clone https://github.com/Admiral-Simo/tourguide-springboot
            else
              echo "Repository exists. Pulling latest changes..."
              cd tourguide-springboot
              git pull origin main
            fi

            cd ~/tourguide-springboot

            echo "Checking for existing Docker container..."
            if [ "$(docker ps -a -q -f name=tourguide)" ]; then
              echo "Existing container found. Replacing it..."
              docker stop tourguide || true
              docker rm tourguide || true
            fi

            echo "Building and running new container..."
            docker-compose up --build -d

            echo "Deployment complete!"